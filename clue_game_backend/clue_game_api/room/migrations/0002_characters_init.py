# Generated by Django 3.2.22 on 2023-10-21 18:30

from django.db import migrations
from clue_game_api.room.models import Room
from dataclasses import dataclass


@dataclass
class ClueGameRoom:
    name: str
    passage_to_room_name: int


# Ordered list is important here
# If a room has a secret passage to another room
# define that other room in passage_to_room_name
# do not define an element for a room that another room
# has a secret passage to. For example, if my list
# contains ClueGameRoom("Study", passage_to_room_name="Kitchen"),
# then it would not contain ClueGameRoom("Kitchen", passage_to_room_name="Kitchen"),
clue_game_rooms = [
    ClueGameRoom("Study", passage_to_room_name="Kitchen"),
    ClueGameRoom("Hall", passage_to_room_name=None),
    ClueGameRoom("Lounge", passage_to_room_name="Conservatory"),
    ClueGameRoom("Dining Room", passage_to_room_name=None),
    ClueGameRoom("Ballroom", passage_to_room_name=None),
    ClueGameRoom("Library", passage_to_room_name=None),
    ClueGameRoom("Billiard Room", passage_to_room_name=None),
]


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("room", "0001_initial"),
    ]

    def default_records_insert(apps, schema_editor):
        # Stores the room id of the newly created room record
        # Allows us to reference the id of rooms to create the secret
        # passage self reference
        self_room_id = {}
        for room in clue_game_rooms:
            room_model = Room(name=room.name)
            room_model.save()
            if room.passage_to_room_name is not None:
                other_secret_passage_room_model = Room(name=room.passage_to_room_name, passage_to_room=room_model)
                room_model.passage_to_room = other_secret_passage_room_model
                other_secret_passage_room_model.save()
            room_model.save()

    operations = [
        migrations.RunPython(default_records_insert),
    ]
